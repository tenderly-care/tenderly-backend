version: '3.8'

services:
  # Development overrides for the backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.production
      target: runtime
    environment:
      NODE_ENV: development
      LOG_LEVEL: debug
    volumes:
      # Mount source code for development (if using nodemon in container)
      - ./src:/app/src:ro
      - ./uploads:/app/uploads
    ports:
      - "3000:3000"
      - "9229:9229"  # Debug port
    command: ["node", "--inspect=0.0.0.0:9229", "dist/main.js"]
    security_opt: []  # Remove security restrictions for development
    read_only: false  # Allow writes in development
    tmpfs: []  # Remove tmpfs restrictions for development

  # Database with exposed ports for development (different ports to avoid conflicts)
  mongodb:
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: devpassword
      MONGO_INITDB_DATABASE: tenderly_dev

  redis:
    ports:
      - "6380:6379"
    command: redis-server --requirepass devredispassword

  # Development tools
  mongo-express:
    image: mongo-express:1.0.0-alpha
    container_name: tenderly-mongo-express
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: devpassword
      ME_CONFIG_MONGODB_URL: mongodb://admin:devpassword@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "8081:8081"
    networks:
      - tenderly-network

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: tenderly-redis-commander
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      REDIS_HOSTS: local:redis:6379:0:devredispassword
    ports:
      - "8082:8081"
    networks:
      - tenderly-network
