name: Feature Branch CI

on:
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  code-quality:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check code formatting
        run: npm run format -- --check

      - name: TypeScript type checking
        run: npx tsc --noEmit

      - name: Security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: code-quality
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7.0
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run unit tests with coverage
        run: npm run test:cov
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/tenderly-test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret
          ENCRYPTION_KEY: test-key-32-chars-long-12345678

      - name: Run e2e tests
        run: npm run test:e2e
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/tenderly-e2e
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret
          ENCRYPTION_KEY: test-key-32-chars-long-12345678

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: tenderly-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  result:
    name: Result
    runs-on: ubuntu-latest
    needs: [code-quality, build-and-test, docker-build]
    if: always()
    steps:
      - name: Check results
        run: |
          if [[ "${{ needs.code-quality.result }}" == "success" && "${{ needs.build-and-test.result }}" == "success" && "${{ needs.docker-build.result }}" == "success" ]]; then
            echo "✅ All checks passed! Branch is ready for PR."
          else
            echo "❌ Some checks failed. Please fix the issues."
            exit 1
          fi
